name: CI

on:
  push:
    branches:
      - '**'
    tags:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        ruby-version: [2.5, 2.6, 2.7]
        include:
          - ruby-version: 2.5
            bundler-version: 2.3.27
          - ruby-version: 2.6
            bundler-version: 2.4.22
          - ruby-version: 2.7
            bundler-version: 2.4.22

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}

    - name: Install dependencies
      run: |
        gem install bundler -v ${{ matrix.bundler-version }}
        bundle _${{ matrix.bundler-version }}_ install --jobs=3 --retry=3

    - name: Lint Puppet manifests
      run: bundle exec rake lint

    - name: Validate Puppet manifests
      run: bundle exec rake validate

    - name: Run spec tests
      run: bundle exec rake spec

  deploy:
    name: "Release"
    needs: test
    runs-on: "ubuntu-latest"
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ github.ref }}"
          clean: true
          fetch-depth: 0

      - name: "Get version"
        id: "get_version"
        run: |
          echo "version=$(jq --raw-output .version metadata.json)" >> $GITHUB_OUTPUT

      - name: "PDK build"
        uses: "docker://puppet/pdk:3.0.0.0"
        with:
          args: "build"

      - name: "Generate release notes"
        run: |
          export GH_HOST=github.com
          gh extension install chelnak/gh-changelog
          gh changelog get --latest > OUTPUT.md
        env:
          GH_TOKEN: ${{ secrets.PUB_TOKEN }}

      - name: "Create release"
        run: |
          gh release create v${{ steps.get_version.outputs.version }} --title v${{ steps.get_version.outputs.version }} -F OUTPUT.md
        env:
          GITHUB_TOKEN: ${{ secrets.PUB_TOKEN }}

      - name: "Publish module"
        uses: "docker://puppet/pdk:3.0.0.0"
        with:
          args: 'release publish --forge-token ${{ secrets.PUPPETFORGE_API_KEY }} --force'

      - name: Notify of deployment success
        run: echo "Deployment to Puppet Forge successful."